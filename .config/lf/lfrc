# interpreter for shell commands (needs to be POSIX compatible)
set shell sh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10

# use enter for shell commands
map <enter> shell

# execute current file (must be executable)
map x $$f
map X !$f

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) hx $fx ;;
		image/*) sxiv $fx; sleep 0.1 ;;
		application/pdf) zathura $fx; sleep 0.05 ;;
		video/*) mpv $fx; sleep 0.05 ;;
		*) $EDITOR $fx ;;
    esac
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
   *.zip|*.sb3) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd open-with ${{
	$@ $f
}}

map J half-down
map K half-up
map d
map dD delete
map dd cut
map r push :open-with<space>
map R rename
map i $pistol $f | less -R
map S $strip -s $f

map gr cd /
map gus cd /usr/share/
map gub cd /usr/bin/
map gul cd /usr/local/
map gui cd /usr/include/
map guu cd /usr/
map gb cd /bin/
map gs cd /sys/
map go cd ~/.config/
map ge cd /etc/
map gl cd /lib/
map gxu cd /usr/share/X11/
map gxo cd ~/.config/X11/

map <lt><lt> :cut; updir; paste; open

set icons true
set info size
set dircounts true
set ratios "1:3:4"
set tabstop 4
set previewer /usr/bin/pistol
set promptfmt "\033[34;1m%w/\033[0m\033[1m%f\033[0m"
set hiddenfiles ~/.ssh:~/.pki:~/.java
set truncatechar "â€¦"
set autoquit
